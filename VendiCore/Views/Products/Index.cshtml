@model IEnumerable<VendiCore.Models.Products>

@{
    ViewData["Title"] = "Product List";
    var currentSort = ViewData["CurrentSort"] as string;
    var nameSortParam = ViewData["NameSortParam"] as string;
    var priceSortParam = ViewData["PriceSortParam"] as string;
    var quantitySortParam = ViewData["QuantitySortParam"] as string;
    var currentPage = ViewData["CurrentPage"] as int? ?? 1;
    var totalPages = ViewData["TotalPages"] as int? ?? 1;
    var pageSize = 10;
}

<div class="container mt-4">
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <h4><i class="bi bi-list"></i> Product List</h4>
                </div>
                <div class="card-body">
                    <p>
                        <a href="@Url.Action("Create")" class="btn btn-primary"><i class="bi bi-plus-circle"></i> Create New Product</a>
                    </p>
                    <table class="table table-striped table-bordered">
                        <thead>
                            <tr>
                                <th>No</th>
                                <th>
                                    <a href="@Url.Action("Index", new { sortOrder = nameSortParam })">Name</a>
                                </th>
                                <th>
                                    <a href="@Url.Action("Index", new { sortOrder = priceSortParam })">Price</a>
                                </th>
                                <th>
                                    <a href="@Url.Action("Index", new { sortOrder = quantitySortParam })">Quantity</a>
                                </th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.Count(); i++)
                            {
                                var item = Model.ElementAt(i);
                                <tr>
                                    <td>@((currentPage - 1) * pageSize + i + 1)</td>
                                    <td>@item.Name</td>
                                    <td>@item.Price USD</td>
                                    <td>@item.QuantityAvailable</td>
                                    <td>
                                        <div class="d-flex flex-row">
                                            <a href="@Url.Action("Edit", new { id = item.ID })" class="btn btn-warning btn-sm me-2 mb-2 mb-sm-0">
                                                <i class="bi bi-pencil-square"></i>
                                                <span class="d-none d-sm-inline">Edit</span>
                                            </a>
                                            <a href="@Url.Action("Delete", new { id = item.ID })" class="btn btn-danger btn-sm me-2 mb-2 mb-sm-0">
                                                <i class="bi bi-trash"></i>
                                                <span class="d-none d-sm-inline">Delete</span>
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>

                    <div class="pagination mt-4">
                        <ul class="pagination">
                            @if (currentPage > 1)
                            {
                                <li class="page-item">
                                    <a class="page-link" asp-action="Index" asp-route-page="@(currentPage - 1)" asp-route-sortOrder="@currentSort">Previous</a>
                                </li>
                            }
                            @for (int i = 1; i <= totalPages; i++)
                            {
                                <li class="page-item @(i == currentPage ? "active" : "")">
                                    <a class="page-link" asp-action="Index" asp-route-page="@i" asp-route-sortOrder="@currentSort">@i</a>
                                </li>
                            }
                            @if (currentPage < totalPages)
                            {
                                <li class="page-item">
                                    <a class="page-link" asp-action="Index" asp-route-page="@(currentPage + 1)" asp-route-sortOrder="@currentSort">Next</a>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
